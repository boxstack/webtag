@{
  Page.Title = "View Item"; 

  string appDatabaseName = App.appDatabaseName;
  var id = "";
  var tag = "";
  var po = "";
  var desc = "";
  var serno = "";
  var model = "";
  var appby = "";
  var appdate = "";
  var cost = "";

  WebGrid grid = null;
  Boolean disposed = false;

  if ( !Request.QueryString["id"].IsEmpty() && Request.QueryString["id"].IsInt() ){
    id = Request.QueryString["id"];
    var db = Database.Open( appDatabaseName );
    var selectItemCommand = "SELECT * FROM Items WHERE ID = @0";
    var item = db.QuerySingle( selectItemCommand, id );

    if ( item != null ) {
      tag = item.Tag;
      po = item.PONumber;
      desc = item.Description;
      serno = item.SerialNumber;
      model = item.Model;
      appby = item.AppliedBy;
      cost = item.Cost;

      if ( item.AppliedByDate != null ) {
        appdate = item.AppliedByDate.ToString( "MM/dd/yyyy" );          
      }

      if ( item.DisposeDate != null ) {
        disposed = true;
      }

      if ( disposed ) {
        Validation.AddFormError("This Item was disposed");
      }
      
      var selectCommand = "SELECT * FROM Moves WHERE ItemID = @0";
      var searchTerm = Request.QueryString["id"];

      var selectedData = db.Query( selectCommand, searchTerm );

      if ( selectedData.Any() ) {
        grid = new WebGrid( source: selectedData, defaultSort: "MoveDate", rowsPerPage: 4 );
        
        if (Request.QueryString[grid.SortDirectionFieldName].IsEmpty()) {
          grid.SortDirection = SortDirection.Descending;
        }          
      }     
    } else {
      Validation.AddFormError("No Item was found with that ID");
    }
  } else {
    Validation.AddFormError("No Item was found with that ID");
  }
}

<!-- <html> from layout -->
  <!-- <body> from layout -->
    <h2>View Item</h2>
    @Html.ValidationSummary()
    <p>
      <a href="~/Items?tag=@tag">Return to Items</a>
    </p>

    <form method="get">
      <fieldset>
        <legend>Item Information</legend>

        <div>
          <span class="spanlabel">Tag:</span>
          <span class="spandata">@tag</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">PO Number:</span>
          <span class="spandata">@po</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Cost:</span>
          <span class="spandata">@cost</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Description:</span>
          <span class="spandata">@desc</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Serial Number:</span>
          <span class="spandata">@serno</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Model:</span>
          <span class="spandata">@model</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Tag Applied By:</span>
          <span class="spandata">@appby</span>
          <br />
        </div>

        <div>
          <span class="spanlabel">Date Applied:</span>
          <span class="spandata">@appdate</span>
          <br />
        </div>

      </fieldset>
    </form>

    <div>
      <a href="~/MoveItem?id=@id">Move Item</a>
      <br />
    </div>

    <div>
      <a href="~/EditItem?id=@id">Edit Item</a>
      <br />
    </div>

    @if ( grid != null ) {
      <div>
        @grid.GetHtml(
          tableStyle: "grid",
          headerStyle: "head",
          alternatingRowStyle: "alt",
          columns: grid.Columns(
            grid.Column("MoveDate", "Moved",
              format: (item) => string.Format("{0:MM/dd/yyyy}", item.MoveDate)
            ),
            grid.Column("Location"),
            grid.Column("AssignedTo", "Assigned To")
          )
        )
      </div>        
    }
